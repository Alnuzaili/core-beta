import{m as o,c as r,C as a}from"./index.6f926540.js";import{g as n}from"./userscore.d5db71f6.js";import{e as l}from"./index.730a65ab.js";import"./echarts.7de7c874.js";window.Alpine=o;o.data("UserGraphs",()=>({solves:null,fails:null,awards:null,solveCount:0,failCount:0,awardCount:0,getSolvePercentage(){let s=this.solveCount/(this.solveCount+this.failCount)*100;return Math.round(s)},getFailPercentage(){let s=this.failCount/(this.solveCount+this.failCount)*100;return Math.round(s)},getCategoryBreakdown(){let s=[],e={};this.solves.data.map(t=>{s.push(t.challenge.category)}),s.forEach(t=>{t in e?e[t]+=1:e[t]=1});let i=[];for(const t in e)i.push({name:t,count:e[t],percent:e[t]/s.length*100,color:r(t)});return i},async init(){this.solves=await a.pages.users.userSolves(window.USER.id),this.fails=await a.pages.users.userFails(window.USER.id),this.awards=await a.pages.users.userAwards(window.USER.id),this.solveCount=this.solves.meta.count,this.failCount=this.fails.meta.count,this.awardCount=this.awards.meta.count;let s=n(window.USER.id,window.USER.name,this.solves.data,this.awards.data);l(this.$refs.scoregraph,s)}}));o.start();
