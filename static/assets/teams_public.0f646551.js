import{m as o,b as n}from"./module.esm.d2f93c01.js";import{C as s}from"./index.f49d0c1c.js";import{g as r}from"./userscore.f2b5061c.js";import{e as l}from"./index.ca6197ee.js";import"./echarts.7de7c874.js";window.Alpine=o;o.data("TeamGraphs",()=>({solves:null,fails:null,awards:null,solveCount:0,failCount:0,awardCount:0,getSolvePercentage(){let a=this.solveCount/(this.solveCount+this.failCount)*100;return Math.round(a)},getFailPercentage(){let a=this.failCount/(this.solveCount+this.failCount)*100;return Math.round(a)},getCategoryBreakdown(){let a=[],e={};this.solves.data.map(t=>{a.push(t.challenge.category)}),a.forEach(t=>{t in e?e[t]+=1:e[t]=1});let i=[];for(const t in e)i.push({name:t,count:e[t],percent:e[t]/a.length*100,color:n(t)});return i},async init(){this.solves=await s.pages.teams.teamSolves(window.TEAM.id),this.fails=await s.pages.teams.teamFails(window.TEAM.id),this.awards=await s.pages.teams.teamAwards(window.TEAM.id),this.solveCount=this.solves.meta.count,this.failCount=this.fails.meta.count,this.awardCount=this.awards.meta.count;let a=r(window.TEAM.id,window.TEAM.name,this.solves.data,this.awards.data);l(this.$refs.scoregraph,a)}}));o.start();
